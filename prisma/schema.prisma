// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Members {
    userId             Int         @id @default(autoincrement())
    username           String      
    nickname           String      
    password           String      
    hashedRefreshToken String?
    quizzes            Quizzes[]
    debates            Debates[] 
    comments           Comments[]
    quizComments       QuizComments[] 
    @@map("Members")
}

model Quizzes {
    quizId             Int         @id @default(autoincrement())      
    UserId             Int         
    title              String      
    content            String      
    imageURL           String      
    createdAt          DateTime    @default(now())
    updatedAt          DateTime    @updatedAt
    deletedAt          DateTime?  
    User               Members     @relation(fields: [UserId], references: [userId])
    quizComments       QuizComments[]

    @@map("Quizzes")
}

model Debates {
    debateId           Int         @id @default(autoincrement())
    UserId             Int              
    title              String      
    content            String      
    createdAt          DateTime    @default(now())
    updatedAt          DateTime    @updatedAt
    deletedAt          DateTime?    

    User               Members     @relation(fields: [UserId], references: [userId])
    Comments           Comments[]

    @@map("Debates")
}

model Comments {
  commentId            Int         @id @default(autoincrement())
  DebateId             Int
  UserId               Int
  content              String   
  createdAt            DateTime    @default(now())
  updatedAt            DateTime    @updatedAt
  deletedAt            DateTime?    

  User                 Members     @relation(fields: [UserId], references: [userId])
  Debates              Debates     @relation(fields: [DebateId], references: [debateId], onDelete: Cascade )

  @@map("Comments")
}

model QuizComments {
  quizCommentId       Int          @id @default(autoincrement)
  QuizId              Int
  UserId              Int
  content             String
  createdAt           DateTime     @default(now())
  updatedAt           DateTime     @updatedAt
  deletedAt           DateTime?

  User                Members      @relation(fields: [UserId], references: [userId])
  Quiz                Quizzes      @relation(fields: [QuizId], references: [quizId], onDelete: Cascade)

  @@map("QuizComments")
}